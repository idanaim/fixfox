name: Mobile App CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'mobile-app/**'
      - '.github/workflows/mobile-ci.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'mobile-app/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  test:
    name: Test Mobile App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install dependencies
        working-directory: ./mobile-app
        run: npm ci

      - name: Run Expo Doctor
        working-directory: ./mobile-app
        run: npx expo-doctor

      - name: Type check
        working-directory: ./mobile-app
        run: npx tsc --noEmit --skipLibCheck

      - name: Run linting (if configured)
        working-directory: ./mobile-app
        run: npm run lint --if-present

#      - name: Run tests (if configured)
#        working-directory: ./mobile-app
#        run: npm test --if-present

  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Install dependencies
        working-directory: ./mobile-app
        run: npm ci

      - name: Expo login
        if: env.EXPO_TOKEN
        working-directory: ./mobile-app
        run: expo login --non-interactive

      - name: Build preview
        if: env.EXPO_TOKEN
        working-directory: ./mobile-app
        run: |
          echo "ðŸ”¨ Building preview build..."
          # eas build --platform all --profile preview --non-interactive

  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Install dependencies
        working-directory: ./mobile-app
        run: npm ci

      - name: Expo login
        if: env.EXPO_TOKEN
        working-directory: ./mobile-app
        run: expo login --non-interactive

      - name: Build production
        if: env.EXPO_TOKEN
        working-directory: ./mobile-app
        run: |
          echo "ðŸš€ Building production build..."
          # Uncomment when EAS is configured:
          # eas build --platform all --profile production --non-interactive

      - name: Submit to stores (if configured)
        if: env.EXPO_TOKEN && vars.AUTO_SUBMIT == 'true'
        working-directory: ./mobile-app
        run: |
          echo "ðŸ“± Submitting to app stores..."
          # Uncomment when store submission is configured:
          # eas submit --platform all --latest --non-interactive

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [test, build-preview, build-production]
    if: always()

    steps:
      - name: Summary
        run: |
          echo "## Mobile App CI/CD Results ðŸ“±" >> $GITHUB_STEP_SUMMARY
          echo "- **Node Version**: ${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Status**: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "- **Preview Build**: ${{ needs.build-preview.result }}" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "- **Production Build**: ${{ needs.build-production.result }}" >> $GITHUB_STEP_SUMMARY
          fi
