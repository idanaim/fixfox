name: Deploy FixFox to AWS EC2

on:
  push:
    branches: [ main, replace-aws-tier ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Deploy to EC2
      env:
        # Application Secrets
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        
        # Database Credentials (optional - can use secrets or keep in script)
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
        DATABASE_USER: ${{ secrets.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      run: |
        chmod +x ./scripts/deploy-dev-ec2.sh
        ./scripts/deploy-dev-ec2.sh
        
    - name: Health Check
      run: |
        # Wait a bit for the service to start
        sleep 30
        
        # Get the public IP from AWS (since it might change)
        PUBLIC_IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=fixfox-instance-dev" "Name=instance-state-name,Values=running" \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text)
        
        echo "Testing API at: http://$PUBLIC_IP:3000/api/api/health"
        
        # Test the health endpoint
        curl -f "http://$PUBLIC_IP:3000/api/api/health" || exit 1
        
        echo "‚úÖ Deployment successful! API is responding."
        echo "üåê API URL: http://$PUBLIC_IP:3000/api"
