name: Monitor Deployment Health

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allow manual trigger

env:
  AWS_REGION: 'us-west-2'
  EB_ENVIRONMENT_NAME: 'fixfox-api-prod'

jobs:
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Get Environment URL
      id: get-url
      run: |
        URL=$(aws elasticbeanstalk describe-environments \
          --environment-names ${{ env.EB_ENVIRONMENT_NAME }} \
          --query 'Environments[0].CNAME' \
          --output text)
        echo "url=http://$URL" >> $GITHUB_OUTPUT
        
    - name: Health Check
      run: |
        echo "üè• Checking health of: ${{ steps.get-url.outputs.url }}/api/health"
        
        # Perform health check
        response=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.get-url.outputs.url }}/api/health" || echo "000")
        
        if [ "$response" = "200" ]; then
          echo "‚úÖ Health check passed (HTTP $response)"
          
          # Get detailed health info
          health_data=$(curl -s "${{ steps.get-url.outputs.url }}/api/health")
          echo "üìä Health Details: $health_data"
        else
          echo "‚ùå Health check failed (HTTP $response)"
          exit 1
        fi
        
    - name: Check Application Performance
      run: |
        echo "‚ö° Performance Check"
        
        # Measure response time
        start_time=$(date +%s%N)
        curl -s "${{ steps.get-url.outputs.url }}/api/health" > /dev/null
        end_time=$(date +%s%N)
        
        response_time=$(( (end_time - start_time) / 1000000 ))
        echo "üìà Response Time: ${response_time}ms"
        
        if [ $response_time -gt 5000 ]; then
          echo "‚ö†Ô∏è Warning: Response time is high (${response_time}ms)"
        else
          echo "‚úÖ Response time is good (${response_time}ms)"
        fi
        
    - name: Notify on Failure
      if: failure()
      run: |
        echo "üö® ALERT: FixFox API Health Check Failed!"
        echo "Environment: ${{ env.EB_ENVIRONMENT_NAME }}"
        echo "URL: ${{ steps.get-url.outputs.url }}"
        echo "Time: $(date)"
        echo ""
        echo "Please check:"
        echo "1. AWS Elastic Beanstalk Console"
        echo "2. Application logs"
        echo "3. Database connectivity" 