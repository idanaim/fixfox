name: Deploy REST API Server to AWS

on:
  push:
    branches: [ main, master ]
    paths:
      - 'apps/rest-man-server/**'
      - '.github/workflows/deploy-server.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'apps/rest-man-server/**'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-west-2'
  EB_APPLICATION_NAME: 'fixfox-api'
  EB_ENVIRONMENT_NAME: 'fixfox-api-prod'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint --if-present
      
    - name: Run tests
      run: npm run test --if-present

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build server
      run: npm run build --if-present
      
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r apps/rest-man-server/dist deployment/
        cp apps/rest-man-server/package*.json deployment/ 2>/dev/null || cp package*.json deployment/
        cp -r node_modules deployment/ 2>/dev/null || echo "Node modules will be installed on server"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deployment/

  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: deployment-package
        path: deployment/
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Create Elastic Beanstalk deployment package
      run: |
        cd deployment
        zip -r ../deployment.zip .
        cd ..
        
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ env.EB_APPLICATION_NAME }}
        environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
        region: ${{ env.AWS_REGION }}
        version_label: ${{ github.sha }}
        deployment_package: deployment.zip
        wait_for_environment_recovery: 300
        
    - name: Deployment Success Notification
      if: success()
      run: |
        echo "üöÄ Deployment successful!"
        echo "Application URL: http://${{ env.EB_ENVIRONMENT_NAME }}.eba-example.us-west-2.elasticbeanstalk.com"
        
    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs in AWS Elastic Beanstalk console" 