#!/bin/bash

# FixFox Command Reference Guide

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${BLUE}ü¶ä FixFox Command Reference${NC}"
echo "=========================="
echo ""

echo -e "${CYAN}üìã BACKEND DEPLOYMENT${NC}"
echo "----------------------"
echo -e "${GREEN}Setup Commands:${NC}"
echo "  ./scripts/setup-app-runner-dev.sh   - Create development App Runner service"
echo "  ./scripts/setup-app-runner-prod.sh  - Create production App Runner service"
echo ""
echo -e "${GREEN}Deployment Commands:${NC}"
echo "  ./scripts/deploy-dev.sh             - Deploy to development environment"
echo "  ./scripts/deploy-prod.sh            - Deploy to production environment"
echo ""
echo -e "${GREEN}Branch Management:${NC}"
echo "  ./scripts/create-dev-branch.sh      - Create and setup dev branch"
echo ""

echo -e "${CYAN}üì± MOBILE APP DEPLOYMENT${NC}"
echo "-------------------------"
echo -e "${GREEN}Configuration:${NC}"
echo "  ./scripts/update-app-urls.sh        - Update app with actual API URLs"
echo ""
echo -e "${GREEN}Development:${NC}"
echo "  cd apps/rest-man-native && npx expo start  - Start local development"
echo ""
echo -e "${GREEN}Building:${NC}"
echo "  eas build --profile development     - Build development version"
echo "  eas build --profile staging         - Build staging version"
echo "  eas build --profile production      - Build production version"
echo ""
echo -e "${GREEN}Submission:${NC}"
echo "  eas submit --profile production     - Submit to app stores"
echo ""

echo -e "${CYAN}üîÑ COMPLETE WORKFLOW${NC}"
echo "--------------------"
echo -e "${YELLOW}1. Initial Setup:${NC}"
echo "   ./scripts/setup-app-runner-dev.sh"
echo "   ./scripts/setup-app-runner-prod.sh"
echo "   ./scripts/create-dev-branch.sh"
echo ""
echo -e "${YELLOW}2. Development Cycle:${NC}"
echo "   # Develop locally"
echo "   cd apps/rest-man-native && npx expo start"
echo ""
echo "   # Deploy backend to staging"
echo "   git push origin dev"
echo ""
echo "   # Update mobile app URLs"
echo "   ./scripts/update-app-urls.sh"
echo ""
echo "   # Build staging app"
echo "   eas build --profile staging"
echo ""
echo -e "${YELLOW}3. Production Release:${NC}"
echo "   # Deploy backend to production"
echo "   git push origin main"
echo ""
echo "   # Update mobile app URLs"
echo "   ./scripts/update-app-urls.sh"
echo ""
echo "   # Build production app"
echo "   eas build --profile production"
echo ""
echo "   # Submit to stores"
echo "   eas submit --profile production"
echo ""

echo -e "${CYAN}üß™ TESTING & DEBUGGING${NC}"
echo "-----------------------"
echo -e "${GREEN}Backend Health Checks:${NC}"
echo "  curl http://localhost:3000/api/health           - Local backend"
echo "  curl https://your-dev-url/api/health            - Development API"
echo "  curl https://your-prod-url/api/health           - Production API"
echo ""
echo -e "${GREEN}Mobile App Testing:${NC}"
echo "  npx expo start --clear                          - Clear cache and start"
echo "  console.log(getEnvironmentInfo())               - Check environment in app"
echo ""

echo -e "${CYAN}üìä SERVICE MANAGEMENT${NC}"
echo "----------------------"
echo -e "${GREEN}AWS App Runner:${NC}"
echo "  aws apprunner list-services --region us-west-2  - List all services"
echo "  aws apprunner describe-service --service-arn ARN - Get service details"
echo ""
echo -e "${GREEN}GitHub Actions:${NC}"
echo "  # Automatic deployment on push to main/dev branches"
echo "  # Manual deployment via GitHub Actions UI"
echo ""

echo -e "${CYAN}üîß CONFIGURATION FILES${NC}"
echo "-----------------------"
echo -e "${GREEN}Backend:${NC}"
echo "  apprunner.yaml                                   - App Runner configuration"
echo "  .github/workflows/deploy-app-runner.yml         - GitHub Actions workflow"
echo ""
echo -e "${GREEN}Mobile App:${NC}"
echo "  apps/rest-man-native/src/config/environment.ts  - Environment configuration"
echo "  apps/rest-man-native/eas.json                   - EAS build configuration"
echo ""

echo -e "${CYAN}üìö DOCUMENTATION${NC}"
echo "------------------"
echo -e "${GREEN}Guides:${NC}"
echo "  README-environments.md                          - Multi-environment setup"
echo "  docs/mobile-app-deployment.md                   - Mobile app deployment"
echo ""

echo -e "${CYAN}üö® TROUBLESHOOTING${NC}"
echo "-------------------"
echo -e "${GREEN}Common Issues:${NC}"
echo "  ‚Ä¢ App using localhost: Check environment detection"
echo "  ‚Ä¢ API connection errors: Verify service health"
echo "  ‚Ä¢ Wrong environment: Check build profile and env vars"
echo ""
echo -e "${GREEN}Debug Commands:${NC}"
echo "  ./scripts/update-app-urls.sh                    - Check and update URLs"
echo "  curl -v https://your-api-url/api/health         - Verbose API test"
echo "  eas build --profile staging --clear-cache       - Clear build cache"
echo ""

echo -e "${CYAN}‚ö° QUICK COMMANDS${NC}"
echo "------------------"
echo -e "${GREEN}Full Development Setup:${NC}"
echo "  ./scripts/setup-app-runner-dev.sh && ./scripts/deploy-dev.sh && ./scripts/update-app-urls.sh"
echo ""
echo -e "${GREEN}Full Production Setup:${NC}"
echo "  ./scripts/setup-app-runner-prod.sh && ./scripts/deploy-prod.sh && ./scripts/update-app-urls.sh"
echo ""
echo -e "${GREEN}Quick Mobile Build:${NC}"
echo "  ./scripts/update-app-urls.sh && eas build --profile staging"
echo ""

echo -e "${CYAN}üåê ENVIRONMENT URLS${NC}"
echo "-------------------"
echo -e "${GREEN}After deployment, your services will be available at:${NC}"
echo "  Development: https://[random].us-west-2.awsapprunner.com"
echo "  Production:  https://[random].us-west-2.awsapprunner.com"
echo ""
echo -e "${YELLOW}Use ./scripts/update-app-urls.sh to get actual URLs${NC}"
echo ""

echo -e "${GREEN}üéâ Happy coding with FixFox!${NC}" 